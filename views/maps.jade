doctype html
html
    head
        meta(charset="utf-8")
        <link href="https://fonts.googleapis.com/css?family=Federo|Hind" rel="stylesheet">
        title Dashboard
        style.
            html, body, #map-canvas {
                height: 100%;
                margin: 0px;
                padding: 0px
            }

            #panel {
                position: absolute;
                top: 5px;
                left: 50%;
                margin-left: -180px;
                z-index: 5;
                background-color: #fff;
                padding: 5px;
                border: 1px solid #999;
            }
        script(src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCJIlUHgkbX3pUv7guWvW4E6eqg_DlpaP0")
        script(src='https://ajax.googleapis.com/ajax/libs/jquery/1/jquery.min.js')
        script(src="/javascripts/Grid.js")
        script(src="/javascripts/Pin.js")
        script(src="/javascripts/Chunk.js")
        script(src="/javascripts/Farm.js")
        script(src="/javascripts/Boundary.js")
        script.

            var farms = [];

            JSON.parse('!{collections.farms}').forEach(function (f) {
                var farm = new Farm([]);
                f.pins.forEach(function (p) {
                    farm.addPin(p);
                });
                var boundary = new Boundary(f.boundary.posts);
                farm.setBoundary(boundary);
                farms.push(farm);
            });

            console.log(farms[1]);

            console.log(farms);

            var salinas = new google.maps.LatLng(36.6777, -121.6555);
            var map = null;

            var markers = [];

            function initialize() {
                var mapOptions = {
                    zoom: 15,
                    center: salinas,
                    disableDefaultUI: true,
                    mapTypeId: 'satellite',
                    draggable: true
                };
                map = new google.maps.Map(document.getElementById('map-canvas'),
                    mapOptions);

                placeMarker(salinas, map);

                // ------
                    for (var i = 0; i < points[0].length; i++) {
                        var pointplacer = new google.maps.LatLng(points[1][i], points[0][i]);
                        placeMarker(pointplacer, map);
                    }
                // ------

                google.maps.event.addListener(map, 'click', function (e) {
                    console.log(e.latLng);
                    placeMarker(e.latLng, map);
                });

                bindFarms();

            }

            function addPin(Pin) {
                console.log("Pin:" + String(Pin.Latitude) + " - " + String(Pin.Longitude));
                var location = new google.maps.LatLng(Pin.Latitude, Pin.Longitude);
                var circle = new google.maps.Circle({
                    strokeColor: '#ff5b54',
                    strokeOpacity: 0.8,
                    strokeWeight: 2,
                    fillColor: '#ff5b54',
                    fillOpacity: 0.45,
                    map: map,
                    center: location,
                    radius: 3
                });
                circle.setMap(map);
                markers.push(circle);
            }

            function clearMap() {
                for (var i = 0; i < markers.length; i++) {
                    markers[i].setMap(null);
                }
                markers = [];
            }

            function placeMarker(position, map) {
                var marker = new google.maps.Marker({
                    position: position,
                    map: map
                });
                markers.push(marker);
            }

            function bindFarms() {
                var farmLinks = document.getElementById('farms').getElementsByTagName('a');

                for (var i = 0; i < farmLinks.length; i++) {
                    console.log(farmLinks[i]);
                    farmLinks[i].onclick = function (e) {
                        clearMap();

                        var ele = e.target;
                        var id = ele.innerHTML;
                        id = parseInt(id.split(" ")[1]) - 1;
                        var farm = farms[id];
                        map.panTo(farm.getCenter());
                        markers.push(farm.drawBounds(map));
                        farm.pins.forEach(function (pin) {
                            addPin(pin);
                        });

                        console.log(farm.boundary);

                         var grid = new Grid(farm.pins, 10);
                         grid.draw(map);

                        function convertSecs(time) {
                            time = Number(time);
                            var hours = Math.floor(time / 3600);
                            var minutes = Math.floor(time % 3600 / 60);
                            var seconds = Math.floor(time % 3600 % 60);
                            var ms = Math.floor((((time % 3600) % 60) / 10));
                            return [hours, minutes, seconds, ms];
                        }

                        for(var i = 0; i < 11; i++){
                            for( var j = 0; j < 11; j++){
                                var avgQS = 0;
                                var avgTime = 0;
                                var week = [];
                                var chunk = grid.getChunk(i, j);
                                var pins = chunk.pins;
                                for (var i = 0; i < pins.length; i++) {
                                    var pin = pins[i];
                                    var qs = parseFloat(pin.Quality);
                                    var date = pin.TimeStamp.split(" ")[0];
                                    var year = parseInt(date.split('-')[0]);
                                    var month = parseInt(date.split('-')[1]);
                                    var day = parseInt(date.split('-')[2]);
                                    var time = parseFloat(pin.TimeStamp.split(" ")[1]);
                                    var hours = 0;
                                    var minutes = 0;
                                    var seconds = 0;
                                    var ms = 0;
                                    console.log("Heres your time: ");
                                    var results = convertSecs(time);
                                    var d = new Date(year, month, day, hours, minutes, seconds);
                                    if (day >= 1 && day <= 7){
                                        firstweek.push(d);
                                    }
                                    avgQS = parseInt((qs + avgQS) / counter);
                                    avgTime = (avgTime + time) / counter;
                                    // console.log(avgQS);
                                    var counter = 0;
                                    counter++;
                                }
                                console.log(chunk);
                                console.log(pins);
                            }
                        }
                    }
                }

            }


            google.maps.event.addDomListener(window, 'load', initialize);

            window.onbeforeunload = function () {
                window.scrollTo(0, 0)
            };
        link(rel='stylesheet',
        href='https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-alpha.6/css/bootstrap.min.css',
        integrity='sha384-rwoIResjU2yc3z8GV/NPeZWAv56rSmLldC3R/AZzGRnGxQQKnKkoFVhFQhNUwEyJ',
        crossorigin='anonymous')
        script(src='https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-alpha.6/js/bootstrap.min.js',
        integrity='sha384-vBWWzlZJ8ea9aCX4pEW3rVHjgjt7zpkNpZk+02D9phzyeVkE+jo0ieGizqPLForn',
        crossorigin='anonymous')
        link(rel='stylesheet', href='/stylesheets/maps.css')
    style.
        body {
            overflow: hidden;
        }

block body

    nav.navbar.navbar-toggleable-md.navbar-inverse.bg-inverse.navbar-padding
        button.navbar-toggler.navbar-toggler-right(type='button',
        data-toggle='collapse',
        data-target='#navbarSupportedContent',
        aria-controls='navbarSupportedContent',
        aria-expanded='false',
        aria-label='Toggle navigation')
            span.navbar-toggler-icon

        a.navbar-brand(href='http://food-origins.com') <img src = "http://food-origins.com/images/site-logo.png" alt = "logo" style = "width: 50px;height 50px">
        #navbarSupportedContent.collapse.navbar-collapse
            ul.navbar-nav.mr-auto
                li.nav-item.dropdown
                    a#navbarDropdownMenuLink.nav-link.dropdown-toggle.editbar(href='https://en.wikipedia.org/wiki/Farm',
                    data-toggle='dropdown', aria-haspopup='true', aria-expanded='false')
                        | Farms
                    #farms.dropdown-menu(aria-labelledby='navbarDropdownMenuLink')
                        each d, i in JSON.parse(collections.farms)
                            a.dropdown-item(href='#')= 'Farm ' + String(i + 1)
                //li.nav-item.options
                //    a#navbarDropdownMenuLink.nav-link.dropdown-toggle(href='http://example.com',
                //    data-toggle='dropdown', aria-haspopup='true', aria-expanded='false')
                //        | Options
                //    #options.dropdown-menu(aria-labelledby='navbarDropdownMenuLink')
                //        each d, i in JSON.parse(collections.farms)
                //            a.dropdown-item(href='#')= 'Option ' + String(i + 1)
                li.nav-item.heatmap
                    a#navbarDropdownMenuLink.nav-link.toggle(href='#',
                    data-toggle='dropdown', aria-haspopup='true', aria-expanded='false')
                        | Heat Map

    #map-canvas